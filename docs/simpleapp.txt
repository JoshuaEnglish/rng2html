=========================
Building the Simple App
=========================

I'm using Bottle for this, as it seems the easiest way to get up
and running. It's not simple, of course, and prone to errors,
but at least SimpleApp is a wxPython Frame that reads from the
Bottle server run from a separate thread. It does not always 
close the web server when the main app closes.

The main window is driven by wxPython's HTML2.WebView object.
I know nothing special about this other than wxPython works
better, especally now that it works on Python 3.6 without having
to build it from source.

The browser built into the app goes to localhost:8080.

The WGSIRefServer class is snurched from StackOverflow. The
entire point of this server is to programatically shut it down
when the window closes.

This server is started it it's own thread using Python's standard
threading module. The thread is created as a Daemon, so it should
shut down automatically.

Testing this watching my Windows Task Manager seems to prove the
point. I've added several print statements to the code to trace
what happens when, and because of a lack of an IDE I can get 
behind I'm editing in notepad++ and running code from the command line.

When I run the code, I see one instance of Python appear in the application
list. I don't see any extra background processes that stay live, so I think
this code is good to run with that won't eat up all my memory and
processing power with the test threads.

The only thing I wish it could do is wait until the server was actually
up and running and serving code before opening the window. Sometimes
it is blank until I hit the reload button.

I am getting a ConnectionResetError::

    Bottle v0.12.13 server starting up (using WSGIRefServer())...
    Listening on http://localhost:8080/
    Hit Ctrl-C to quit.

    127.0.0.1 - - [22/Apr/2017 18:16:23] "HEAD / HTTP/1.1" 200 0
    127.0.0.1 - - [22/Apr/2017 18:16:27] "GET / HTTP/1.1" 200 3335
    ----------------------------------------
    Exception happened during processing of request from ('127.0.0.1', 64811)
    Traceback (most recent call last):
      File "C:\Users\Josh\AppData\Local\Programs\Python\Python36\lib\socketserver.py", line 317, in _handle_request_noblock
        self.process_request(request, client_address)
      File "C:\Users\Josh\AppData\Local\Programs\Python\Python36\lib\socketserver.py", line 348, in process_request
        self.finish_request(request, client_address)
      File "C:\Users\Josh\AppData\Local\Programs\Python\Python36\lib\socketserver.py", line 361, in finish_request
        self.RequestHandlerClass(request, client_address, self)
      File "C:\Users\Josh\AppData\Local\Programs\Python\Python36\lib\socketserver.py", line 696, in __init__
        self.handle()
      File "C:\Users\Josh\AppData\Local\Programs\Python\Python36\lib\wsgiref\simple_server.py", line 118, in handle
        self.raw_requestline = self.rfile.readline(65537)
      File "C:\Users\Josh\AppData\Local\Programs\Python\Python36\lib\socket.py", line 586, in readinto
        return self._sock.recv_into(b)
    ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host
    ----------------------------------------
    Starting server
    checking...
    Starting client
    Closed client
    shutting down the web server
    Closed server

    
But I think this is okay.

